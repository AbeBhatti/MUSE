#!/bin/bash

# Script to configure CloudFront backend URL for VYBE
# This script helps you find your ALB and configure CloudFront

set -e

echo "🔍 Searching for your ALB..."
echo ""

# Get all ALBs in the region
ALB_ARN=$(aws elbv2 describe-load-balancers \
  --region us-east-1 \
  --query 'LoadBalancers[?contains(LoadBalancerName, `vybe`) || contains(LoadBalancerName, `Vybe`)].LoadBalancerArn' \
  --output text)

if [ -z "$ALB_ARN" ]; then
  echo "❌ No ALB found. Please create an ALB first."
  echo ""
  echo "To create an ALB, run:"
  echo "  aws elbv2 create-load-balancer \\"
  echo "    --name vybe-alb \\"
  echo "    --scheme internet-facing \\"
  echo "    --type application \\"
  echo "    --subnets subnet-XXXXX subnet-YYYYY"
  exit 1
fi

echo "✅ Found ALB: $ALB_ARN"

# Get ALB DNS name
ALB_DNS=$(aws elbv2 describe-load-balancers \
  --region us-east-1 \
  --load-balancer-arns "$ALB_ARN" \
  --query 'LoadBalancers[0].DNSName' \
  --output text)

echo "🌐 ALB DNS: $ALB_DNS"
echo ""

# Get CloudFront distribution
CF_DIST=$(aws cloudfront list-distributions \
  --query 'DistributionList.Items[?contains(Comment, `vybe`) || contains(Comment, `Vybe`) || Id==`d1dut83snnf5pc`].Id' \
  --output text)

if [ -z "$CF_DIST" ]; then
  CF_DIST=$(aws cloudfront list-distributions \
    --query 'DistributionList.Items[0].Id' \
    --output text)
fi

echo "📦 Found CloudFront distribution: $CF_DIST"
echo ""

# Get distribution config
echo "📋 Current CloudFront configuration:"
aws cloudfront get-distribution-config \
  --id "$CF_DIST" \
  --query 'DistributionConfig' \
  > /tmp/cloudfront-config.json

echo ""
echo "==========================================="
echo "📝 Configuration Steps"
echo "==========================================="
echo ""
echo "Option 1: Set BACKEND_URL in your S3 bucket (Recommended)"
echo "-------------------------------------------"
echo "1. Create a new config.js in your S3 bucket with:"
echo ""
echo "   window.BACKEND_URL = 'http://$ALB_DNS';"
echo ""
echo "2. Or update the existing config.js:"
echo "   s3://your-bucket-name/config.js"
echo ""
echo "Option 2: Configure CloudFront Origin Request Policy"
echo "-------------------------------------------"
echo "This requires creating a new CloudFront distribution behavior."
echo ""
echo "1. Go to AWS Console > CloudFront > Your Distribution"
echo "2. Add a new behavior for path pattern: /api/*"
echo "3. Set origin to: $ALB_DNS"
echo "4. Set protocol: HTTP"
echo "5. Enable 'Forward all headers'"
echo ""

# Create a production config file
cat > frontend/config.prod.js << EOF
/**
 * Production Backend API Configuration
 * Auto-generated by configure-cloudfront-backend.sh
 */

window.BACKEND_URL = 'http://$ALB_DNS';

console.log('🔧 Production Backend URL:', window.BACKEND_URL);
EOF

echo "✅ Created production config: frontend/config.prod.js"
echo ""
echo "To use it:"
echo "  1. Upload config.prod.js to your S3 bucket as config.js"
echo "  2. Invalidate CloudFront cache:"
echo "     aws cloudfront create-invalidation --distribution-id $CF_DIST --paths '/*'"
echo ""

# Save ALB info
echo "$ALB_DNS" > /tmp/alb-dns.txt
echo "$ALB_ARN" > /tmp/alb-arn.txt
echo "$CF_DIST" > /tmp/cf-dist-id.txt

echo "💾 Saved ALB info to /tmp/alb-dns.txt"

